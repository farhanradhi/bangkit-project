// Generated by view binder compiler. Do not edit!
package com.capstone.sampahin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.sampahin.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addAddressButton;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final EditText etRadius;

  @NonNull
  public final EditText etRadiusMyLocation;

  @NonNull
  public final TextInputLayout etlAddress;

  @NonNull
  public final TextInputLayout etlRadius;

  @NonNull
  public final TextInputLayout etlRadiusMyLocation;

  @NonNull
  public final MaterialButton myLocationButton;

  @NonNull
  public final TextView or;

  @NonNull
  public final ConstraintLayout placeholderLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvMaps;

  private FragmentMapsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addAddressButton, @NonNull EditText etAddress,
      @NonNull EditText etRadius, @NonNull EditText etRadiusMyLocation,
      @NonNull TextInputLayout etlAddress, @NonNull TextInputLayout etlRadius,
      @NonNull TextInputLayout etlRadiusMyLocation, @NonNull MaterialButton myLocationButton,
      @NonNull TextView or, @NonNull ConstraintLayout placeholderLayout,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView rvMaps) {
    this.rootView = rootView;
    this.addAddressButton = addAddressButton;
    this.etAddress = etAddress;
    this.etRadius = etRadius;
    this.etRadiusMyLocation = etRadiusMyLocation;
    this.etlAddress = etlAddress;
    this.etlRadius = etlRadius;
    this.etlRadiusMyLocation = etlRadiusMyLocation;
    this.myLocationButton = myLocationButton;
    this.or = or;
    this.placeholderLayout = placeholderLayout;
    this.progressBar = progressBar;
    this.rvMaps = rvMaps;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_address_button;
      MaterialButton addAddressButton = ViewBindings.findChildViewById(rootView, id);
      if (addAddressButton == null) {
        break missingId;
      }

      id = R.id.et_address;
      EditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.et_radius;
      EditText etRadius = ViewBindings.findChildViewById(rootView, id);
      if (etRadius == null) {
        break missingId;
      }

      id = R.id.et_radius_my_location;
      EditText etRadiusMyLocation = ViewBindings.findChildViewById(rootView, id);
      if (etRadiusMyLocation == null) {
        break missingId;
      }

      id = R.id.etl_address;
      TextInputLayout etlAddress = ViewBindings.findChildViewById(rootView, id);
      if (etlAddress == null) {
        break missingId;
      }

      id = R.id.etl_radius;
      TextInputLayout etlRadius = ViewBindings.findChildViewById(rootView, id);
      if (etlRadius == null) {
        break missingId;
      }

      id = R.id.etl_radius_my_location;
      TextInputLayout etlRadiusMyLocation = ViewBindings.findChildViewById(rootView, id);
      if (etlRadiusMyLocation == null) {
        break missingId;
      }

      id = R.id.my_location_button;
      MaterialButton myLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (myLocationButton == null) {
        break missingId;
      }

      id = R.id.or;
      TextView or = ViewBindings.findChildViewById(rootView, id);
      if (or == null) {
        break missingId;
      }

      id = R.id.placeholder_layout;
      ConstraintLayout placeholderLayout = ViewBindings.findChildViewById(rootView, id);
      if (placeholderLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rvMaps;
      RecyclerView rvMaps = ViewBindings.findChildViewById(rootView, id);
      if (rvMaps == null) {
        break missingId;
      }

      return new FragmentMapsBinding((ConstraintLayout) rootView, addAddressButton, etAddress,
          etRadius, etRadiusMyLocation, etlAddress, etlRadius, etlRadiusMyLocation,
          myLocationButton, or, placeholderLayout, progressBar, rvMaps);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
